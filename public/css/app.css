/**
 * One Dark theme for prism.js
 * Based on Atom's One Dark theme: https://github.com/atom/atom/tree/master/packages/one-dark-syntax
 */

/**
 * One Dark colours (accurate as of commit 8ae45ca on 6 Sep 2018)
 * From colors.less
 * --mono-1: hsl(220, 14%, 71%);
 * --mono-2: hsl(220, 9%, 55%);
 * --mono-3: hsl(220, 10%, 40%);
 * --hue-1: hsl(187, 47%, 55%);
 * --hue-2: hsl(207, 82%, 66%);
 * --hue-3: hsl(286, 60%, 67%);
 * --hue-4: hsl(95, 38%, 62%);
 * --hue-5: hsl(355, 65%, 65%);
 * --hue-5-2: hsl(5, 48%, 51%);
 * --hue-6: hsl(29, 54%, 61%);
 * --hue-6-2: hsl(39, 67%, 69%);
 * --syntax-fg: hsl(220, 14%, 71%);
 * --syntax-bg: hsl(220, 13%, 18%);
 * --syntax-gutter: hsl(220, 14%, 45%);
 * --syntax-guide: hsla(220, 14%, 71%, 0.15);
 * --syntax-accent: hsl(220, 100%, 66%);
 * From syntax-variables.less
 * --syntax-selection-color: hsl(220, 13%, 28%);
 * --syntax-gutter-background-color-selected: hsl(220, 13%, 26%);
 * --syntax-cursor-line: hsla(220, 100%, 80%, 0.04);
 */

code[class*="language-"],
pre[class*="language-"] {
	background: hsl(220, 13%, 18%);
	color: hsl(220, 14%, 71%);
	text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	font-family: "Fira Code", "Fira Mono", Menlo, Consolas, "DejaVu Sans Mono", monospace;
	direction: ltr;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	line-height: 1.5;
	-moz-tab-size: 2;
	-o-tab-size: 2;
	tab-size: 2;
	-webkit-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

/* Selection */

code[class*="language-"]::-moz-selection,
code[class*="language-"] *::-moz-selection,
pre[class*="language-"] *::-moz-selection {
	background: hsl(220, 13%, 28%);
	color: inherit;
	text-shadow: none;
}

code[class*="language-"]::-moz-selection, code[class*="language-"] *::-moz-selection, pre[class*="language-"] *::-moz-selection {
	background: hsl(220, 13%, 28%);
	color: inherit;
	text-shadow: none;
}

code[class*="language-"]::selection,
code[class*="language-"] *::selection,
pre[class*="language-"] *::selection {
	background: hsl(220, 13%, 28%);
	color: inherit;
	text-shadow: none;
}

/* Code blocks */

pre[class*="language-"] {
	padding: 1em;
	margin: 0.5em 0;
	overflow: auto;
	border-radius: 0.3em;
}

/* Inline code */

:not(pre) > code[class*="language-"] {
	padding: 0.2em 0.3em;
	border-radius: 0.3em;
	white-space: normal;
}

/* Print */

@media print {
	code[class*="language-"],
	pre[class*="language-"] {
		text-shadow: none;
	}
}

.token.comment,
.token.prolog,
.token.cdata {
	color: hsl(220, 10%, 40%);
}

.token.doctype,
.token.punctuation,
.token.entity {
	color: hsl(220, 14%, 71%);
}

.token.attr-name,
.token.class-name,
.token.boolean,
.token.constant,
.token.number,
.token.atrule {
	color: hsl(29, 54%, 61%);
}

.token.keyword {
	color: hsl(286, 60%, 67%);
}

.token.property,
.token.tag,
.token.symbol,
.token.deleted,
.token.important {
	color: hsl(355, 65%, 65%);
}

.token.selector,
.token.string,
.token.char,
.token.builtin,
.token.inserted,
.token.regex,
.token.attr-value,
.token.attr-value > .token.punctuation {
	color: hsl(95, 38%, 62%);
}

.token.variable,
.token.operator,
.token.function {
	color: hsl(207, 82%, 66%);
}

.token.url {
	color: hsl(187, 47%, 55%);
}

/* HTML overrides */

.token.attr-value > .token.punctuation.attr-equals,
.token.special-attr > .token.attr-value > .token.value.css {
	color: hsl(220, 14%, 71%);
}

/* CSS overrides */

.language-css .token.selector {
	color: hsl(355, 65%, 65%);
}

.language-css .token.property {
	color: hsl(220, 14%, 71%);
}

.language-css .token.function,
.language-css .token.url > .token.function {
	color: hsl(187, 47%, 55%);
}

.language-css .token.url > .token.string.url {
	color: hsl(95, 38%, 62%);
}

.language-css .token.important,
.language-css .token.atrule .token.rule {
	color: hsl(286, 60%, 67%);
}

/* JS overrides */

.language-javascript .token.operator {
	color: hsl(286, 60%, 67%);
}

.language-javascript .token.template-string > .token.interpolation > .token.interpolation-punctuation.punctuation {
	color: hsl(5, 48%, 51%);
}

/* JSON overrides */

.language-json .token.operator {
	color: hsl(220, 14%, 71%);
}

.language-json .token.null.keyword {
	color: hsl(29, 54%, 61%);
}

/* MD overrides */

.language-markdown .token.url,
.language-markdown .token.url > .token.operator,
.language-markdown .token.url-reference.url > .token.string {
	color: hsl(220, 14%, 71%);
}

.language-markdown .token.url > .token.content {
	color: hsl(207, 82%, 66%);
}

.language-markdown .token.url > .token.url,
.language-markdown .token.url-reference.url {
	color: hsl(187, 47%, 55%);
}

.language-markdown .token.blockquote.punctuation,
.language-markdown .token.hr.punctuation {
	color: hsl(220, 10%, 40%);
	font-style: italic;
}

.language-markdown .token.code-snippet {
	color: hsl(95, 38%, 62%);
}

.language-markdown .token.bold .token.content {
	color: hsl(29, 54%, 61%);
}

.language-markdown .token.italic .token.content {
	color: hsl(286, 60%, 67%);
}

.language-markdown .token.strike .token.content,
.language-markdown .token.strike .token.punctuation,
.language-markdown .token.list.punctuation,
.language-markdown .token.title.important > .token.punctuation {
	color: hsl(355, 65%, 65%);
}

/* General */

.token.bold {
	font-weight: bold;
}

.token.comment,
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

.token.namespace {
	opacity: 0.8;
}

/* Plugin overrides */

/* Selectors should have higher specificity than those in the plugins' default stylesheets */

/* Show Invisibles plugin overrides */

.token.token.tab:not(:empty):before,
.token.token.cr:before,
.token.token.lf:before,
.token.token.space:before {
	color: hsla(220, 14%, 71%, 0.15);
	text-shadow: none;
}

/* Toolbar plugin overrides */

/* Space out all buttons and move them away from the right edge of the code block */

div.code-toolbar > .toolbar.toolbar > .toolbar-item {
	margin-right: 0.4em;
}

/* Styling the buttons */

div.code-toolbar > .toolbar.toolbar > .toolbar-item > button,
div.code-toolbar > .toolbar.toolbar > .toolbar-item > a,
div.code-toolbar > .toolbar.toolbar > .toolbar-item > span {
	background: hsl(220, 13%, 26%);
	color: hsl(220, 9%, 55%);
	padding: 0.1em 0.4em;
	border-radius: 0.3em;
}

div.code-toolbar > .toolbar.toolbar > .toolbar-item > button:hover,
div.code-toolbar > .toolbar.toolbar > .toolbar-item > button:focus,
div.code-toolbar > .toolbar.toolbar > .toolbar-item > a:hover,
div.code-toolbar > .toolbar.toolbar > .toolbar-item > a:focus,
div.code-toolbar > .toolbar.toolbar > .toolbar-item > span:hover,
div.code-toolbar > .toolbar.toolbar > .toolbar-item > span:focus {
	background: hsl(220, 13%, 28%);
	color: hsl(220, 14%, 71%);
}

/* Line Highlight plugin overrides */

/* The highlighted line itself */

.line-highlight.line-highlight {
	background: hsla(220, 100%, 80%, 0.04);
}

/* Default line numbers in Line Highlight plugin */

.line-highlight.line-highlight:before,
.line-highlight.line-highlight[data-end]:after {
	background: hsl(220, 13%, 26%);
	color: hsl(220, 14%, 71%);
	padding: 0.1em 0.6em;
	border-radius: 0.3em;
	box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.2); /* same as Toolbar plugin default */
}

/* Hovering over a linkable line number (in the gutter area) */

/* Requires Line Numbers plugin as well */

pre[id].linkable-line-numbers.linkable-line-numbers span.line-numbers-rows > span:hover:before {
	background-color: hsla(220, 100%, 80%, 0.04);
}

/* Line Numbers and Command Line plugins overrides */

/* Line separating gutter from coding area */

.line-numbers.line-numbers .line-numbers-rows,
.command-line .command-line-prompt {
	border-right-color: hsla(220, 14%, 71%, 0.15);
}

/* Stuff in the gutter */

.line-numbers .line-numbers-rows > span:before,
.command-line .command-line-prompt > span:before {
	color: hsl(220, 14%, 45%);
}

/* Match Braces plugin overrides */

/* Note: Outline colour is inherited from the braces */

.rainbow-braces .token.token.punctuation.brace-level-1,
.rainbow-braces .token.token.punctuation.brace-level-5,
.rainbow-braces .token.token.punctuation.brace-level-9 {
	color: hsl(355, 65%, 65%);
}

.rainbow-braces .token.token.punctuation.brace-level-2,
.rainbow-braces .token.token.punctuation.brace-level-6,
.rainbow-braces .token.token.punctuation.brace-level-10 {
	color: hsl(95, 38%, 62%);
}

.rainbow-braces .token.token.punctuation.brace-level-3,
.rainbow-braces .token.token.punctuation.brace-level-7,
.rainbow-braces .token.token.punctuation.brace-level-11 {
	color: hsl(207, 82%, 66%);
}

.rainbow-braces .token.token.punctuation.brace-level-4,
.rainbow-braces .token.token.punctuation.brace-level-8,
.rainbow-braces .token.token.punctuation.brace-level-12 {
	color: hsl(286, 60%, 67%);
}

/* Diff Highlight plugin overrides */

/* Taken from https://github.com/atom/github/blob/master/styles/variables.less */

pre.diff-highlight > code .token.token.deleted:not(.prefix),
pre > code.diff-highlight .token.token.deleted:not(.prefix) {
	background-color: hsla(353, 100%, 66%, 0.15);
}

pre.diff-highlight > code .token.token.deleted:not(.prefix)::-moz-selection,
pre.diff-highlight > code .token.token.deleted:not(.prefix) *::-moz-selection,
pre > code.diff-highlight .token.token.deleted:not(.prefix)::-moz-selection,
pre > code.diff-highlight .token.token.deleted:not(.prefix) *::-moz-selection {
	background-color: hsla(353, 95%, 66%, 0.25);
}

pre.diff-highlight > code .token.token.deleted:not(.prefix)::-moz-selection, pre.diff-highlight > code .token.token.deleted:not(.prefix) *::-moz-selection, pre > code.diff-highlight .token.token.deleted:not(.prefix)::-moz-selection, pre > code.diff-highlight .token.token.deleted:not(.prefix) *::-moz-selection {
	background-color: hsla(353, 95%, 66%, 0.25);
}

pre.diff-highlight > code .token.token.deleted:not(.prefix)::selection,
pre.diff-highlight > code .token.token.deleted:not(.prefix) *::selection,
pre > code.diff-highlight .token.token.deleted:not(.prefix)::selection,
pre > code.diff-highlight .token.token.deleted:not(.prefix) *::selection {
	background-color: hsla(353, 95%, 66%, 0.25);
}

pre.diff-highlight > code .token.token.inserted:not(.prefix),
pre > code.diff-highlight .token.token.inserted:not(.prefix) {
	background-color: hsla(137, 100%, 55%, 0.15);
}

pre.diff-highlight > code .token.token.inserted:not(.prefix)::-moz-selection,
pre.diff-highlight > code .token.token.inserted:not(.prefix) *::-moz-selection,
pre > code.diff-highlight .token.token.inserted:not(.prefix)::-moz-selection,
pre > code.diff-highlight .token.token.inserted:not(.prefix) *::-moz-selection {
	background-color: hsla(135, 73%, 55%, 0.25);
}

pre.diff-highlight > code .token.token.inserted:not(.prefix)::-moz-selection, pre.diff-highlight > code .token.token.inserted:not(.prefix) *::-moz-selection, pre > code.diff-highlight .token.token.inserted:not(.prefix)::-moz-selection, pre > code.diff-highlight .token.token.inserted:not(.prefix) *::-moz-selection {
	background-color: hsla(135, 73%, 55%, 0.25);
}

pre.diff-highlight > code .token.token.inserted:not(.prefix)::selection,
pre.diff-highlight > code .token.token.inserted:not(.prefix) *::selection,
pre > code.diff-highlight .token.token.inserted:not(.prefix)::selection,
pre > code.diff-highlight .token.token.inserted:not(.prefix) *::selection {
	background-color: hsla(135, 73%, 55%, 0.25);
}

/* Previewers plugin overrides */

/* Based on https://github.com/atom-community/atom-ide-datatip/blob/master/styles/atom-ide-datatips.less and https://github.com/atom/atom/blob/master/packages/one-dark-ui */

/* Border around popup */

.prism-previewer.prism-previewer:before,
.prism-previewer-gradient.prism-previewer-gradient div {
	border-color: hsl(224, 13%, 17%);
}

/* Angle and time should remain as circles and are hence not included */

.prism-previewer-color.prism-previewer-color:before,
.prism-previewer-gradient.prism-previewer-gradient div,
.prism-previewer-easing.prism-previewer-easing:before {
	border-radius: 0.3em;
}

/* Triangles pointing to the code */

.prism-previewer.prism-previewer:after {
	border-top-color: hsl(224, 13%, 17%);
}

.prism-previewer-flipped.prism-previewer-flipped.after {
	border-bottom-color: hsl(224, 13%, 17%);
}

/* Background colour within the popup */

.prism-previewer-angle.prism-previewer-angle:before,
.prism-previewer-time.prism-previewer-time:before,
.prism-previewer-easing.prism-previewer-easing {
	background: hsl(219, 13%, 22%);
}

/* For angle, this is the positive area (eg. 90deg will display one quadrant in this colour) */

/* For time, this is the alternate colour */

.prism-previewer-angle.prism-previewer-angle circle,
.prism-previewer-time.prism-previewer-time circle {
	stroke: hsl(220, 14%, 71%);
	stroke-opacity: 1;
}

/* Stroke colours of the handle, direction point, and vector itself */

.prism-previewer-easing.prism-previewer-easing circle,
.prism-previewer-easing.prism-previewer-easing path,
.prism-previewer-easing.prism-previewer-easing line {
	stroke: hsl(220, 14%, 71%);
}

/* Fill colour of the handle */

.prism-previewer-easing.prism-previewer-easing circle {
	fill: transparent;
}

/*! tailwindcss v3.0.23 | MIT License | https://tailwindcss.com
 */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: IBM Plex Mono, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
	background-color: #fff;
	border-color: #6b7280;
	border-width: 1px;
	border-radius: 0px;
	padding-top: 0.5rem;
	padding-right: 0.75rem;
	padding-bottom: 0.5rem;
	padding-left: 0.75rem;
	font-size: 1rem;
	line-height: 1.5rem;
	--tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: #2563eb;
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
	color: #6b7280;
	opacity: 1;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
	color: #6b7280;
	opacity: 1;
}

input::placeholder,textarea::placeholder {
	color: #6b7280;
	opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
	padding: 0;
}

::-webkit-date-and-time-value {
	min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
	padding-top: 0;
	padding-bottom: 0;
}

select {
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
	background-position: right 0.5rem center;
	background-repeat: no-repeat;
	background-size: 1.5em 1.5em;
	padding-right: 2.5rem;
	-webkit-print-color-adjust: exact;
	        color-adjust: exact;
}

[multiple] {
	background-image: initial;
	background-position: initial;
	background-repeat: unset;
	background-size: initial;
	padding-right: 0.75rem;
	-webkit-print-color-adjust: unset;
	        color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
	padding: 0;
	-webkit-print-color-adjust: exact;
	        color-adjust: exact;
	display: inline-block;
	vertical-align: middle;
	background-origin: border-box;
	-webkit-user-select: none;
	   -moz-user-select: none;
	    -ms-user-select: none;
	        user-select: none;
	flex-shrink: 0;
	height: 1rem;
	width: 1rem;
	color: #2563eb;
	background-color: #fff;
	border-color: #6b7280;
	border-width: 1px;
	--tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
	border-radius: 0px;
}

[type='radio'] {
	border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 2px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: #2563eb;
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
	border-color: transparent;
	background-color: currentColor;
	background-size: 100% 100%;
	background-position: center;
	background-repeat: no-repeat;
}

[type='checkbox']:checked {
	background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
	background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
	border-color: transparent;
	background-color: currentColor;
}

[type='checkbox']:indeterminate {
	background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
	border-color: transparent;
	background-color: currentColor;
	background-size: 100% 100%;
	background-position: center;
	background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
	border-color: transparent;
	background-color: currentColor;
}

[type='file'] {
	background: unset;
	border-color: inherit;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-size: unset;
	line-height: inherit;
}

[type='file']:focus {
	outline: 1px auto -webkit-focus-ring-color;
}

*, ::before, ::after {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x:  ;
	--tw-pan-y:  ;
	--tw-pinch-zoom:  ;
	--tw-scroll-snap-strictness: proximity;
	--tw-ordinal:  ;
	--tw-slashed-zero:  ;
	--tw-numeric-figure:  ;
	--tw-numeric-spacing:  ;
	--tw-numeric-fraction:  ;
	--tw-ring-inset:  ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur:  ;
	--tw-brightness:  ;
	--tw-contrast:  ;
	--tw-grayscale:  ;
	--tw-hue-rotate:  ;
	--tw-invert:  ;
	--tw-saturate:  ;
	--tw-sepia:  ;
	--tw-drop-shadow:  ;
	--tw-backdrop-blur:  ;
	--tw-backdrop-brightness:  ;
	--tw-backdrop-contrast:  ;
	--tw-backdrop-grayscale:  ;
	--tw-backdrop-hue-rotate:  ;
	--tw-backdrop-invert:  ;
	--tw-backdrop-opacity:  ;
	--tw-backdrop-saturate:  ;
	--tw-backdrop-sepia:  ;
}

.form-input,.form-textarea,.form-select,.form-multiselect {
	-webkit-appearance: none;
	   -moz-appearance: none;
	        appearance: none;
	background-color: #fff;
	border-color: #6b7280;
	border-width: 1px;
	border-radius: 0px;
	padding-top: 0.5rem;
	padding-right: 0.75rem;
	padding-bottom: 0.5rem;
	padding-left: 0.75rem;
	font-size: 1rem;
	line-height: 1.5rem;
	--tw-shadow: 0 0 #0000;
}

.form-input:focus, .form-textarea:focus, .form-select:focus, .form-multiselect:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
	--tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: #2563eb;
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
	border-color: #2563eb;
}

.form-input::-moz-placeholder, .form-textarea::-moz-placeholder {
	color: #6b7280;
	opacity: 1;
}

.form-input:-ms-input-placeholder, .form-textarea:-ms-input-placeholder {
	color: #6b7280;
	opacity: 1;
}

.form-input::placeholder,.form-textarea::placeholder {
	color: #6b7280;
	opacity: 1;
}

.form-input::-webkit-datetime-edit-fields-wrapper {
	padding: 0;
}

.form-input::-webkit-date-and-time-value {
	min-height: 1.5em;
}

.form-input::-webkit-datetime-edit,.form-input::-webkit-datetime-edit-year-field,.form-input::-webkit-datetime-edit-month-field,.form-input::-webkit-datetime-edit-day-field,.form-input::-webkit-datetime-edit-hour-field,.form-input::-webkit-datetime-edit-minute-field,.form-input::-webkit-datetime-edit-second-field,.form-input::-webkit-datetime-edit-millisecond-field,.form-input::-webkit-datetime-edit-meridiem-field {
	padding-top: 0;
	padding-bottom: 0;
}

.prose {
	color: var(--tw-prose-body);
	max-width: 65ch;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-lead);
	font-size: 1.25em;
	line-height: 1.6;
	margin-top: 1.2em;
	margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-links);
	text-decoration: underline;
	font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-bold);
	font-weight: 600;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
	list-style-type: decimal;
	padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
	list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
	list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
	list-style-type: disc;
	padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
	font-weight: 400;
	color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
	color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
	border-color: var(--tw-prose-hr);
	border-top-width: 1px;
	margin-top: 3em;
	margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
	font-weight: 500;
	font-style: italic;
	color: var(--tw-prose-quotes);
	border-left-width: 0.25rem;
	border-left-color: var(--tw-prose-quote-borders);
	quotes: "\201C""\201D""\2018""\2019";
	margin-top: 1.6em;
	margin-bottom: 1.6em;
	padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
	content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
	content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 800;
	font-size: 2.25em;
	margin-top: 0;
	margin-bottom: 0.8888889em;
	line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 900;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 700;
	font-size: 1.5em;
	margin-top: 2em;
	margin-bottom: 1em;
	line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 800;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	font-size: 1.25em;
	margin-top: 1.6em;
	margin-bottom: 0.6em;
	line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 700;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	margin-top: 1.5em;
	margin-bottom: 0.5em;
	line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
	font-weight: 700;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
	margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-captions);
	font-size: 0.875em;
	line-height: 1.4285714;
	margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-code);
	font-weight: 600;
	font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
	content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
	content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-links);
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-pre-code);
	background-color: var(--tw-prose-pre-bg);
	overflow-x: auto;
	font-weight: 400;
	font-size: 0.875em;
	line-height: 1.7142857;
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
	border-radius: 0.375rem;
	padding-top: 0.8571429em;
	padding-right: 1.1428571em;
	padding-bottom: 0.8571429em;
	padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
	background-color: transparent;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-weight: inherit;
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
	content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
	content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
	width: 100%;
	table-layout: auto;
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	font-size: 0.875em;
	line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	vertical-align: bottom;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
	border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
	vertical-align: baseline;
	padding-top: 0.5714286em;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}

.prose {
	--tw-prose-body: #374151;
	--tw-prose-headings: #111827;
	--tw-prose-lead: #4b5563;
	--tw-prose-links: #111827;
	--tw-prose-bold: #111827;
	--tw-prose-counters: #6b7280;
	--tw-prose-bullets: #d1d5db;
	--tw-prose-hr: #e5e7eb;
	--tw-prose-quotes: #111827;
	--tw-prose-quote-borders: #e5e7eb;
	--tw-prose-captions: #6b7280;
	--tw-prose-code: #111827;
	--tw-prose-pre-code: #e5e7eb;
	--tw-prose-pre-bg: #1f2937;
	--tw-prose-th-borders: #d1d5db;
	--tw-prose-td-borders: #e5e7eb;
	--tw-prose-invert-body: #d1d5db;
	--tw-prose-invert-headings: #fff;
	--tw-prose-invert-lead: #9ca3af;
	--tw-prose-invert-links: #fff;
	--tw-prose-invert-bold: #fff;
	--tw-prose-invert-counters: #9ca3af;
	--tw-prose-invert-bullets: #4b5563;
	--tw-prose-invert-hr: #374151;
	--tw-prose-invert-quotes: #f3f4f6;
	--tw-prose-invert-quote-borders: #374151;
	--tw-prose-invert-captions: #9ca3af;
	--tw-prose-invert-code: #fff;
	--tw-prose-invert-pre-code: #d1d5db;
	--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
	--tw-prose-invert-th-borders: #4b5563;
	--tw-prose-invert-td-borders: #374151;
	font-size: 1rem;
	line-height: 1.75;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
	margin-top: 1.25em;
	margin-bottom: 1.25em;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
	font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
	font-size: 0.9em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
	padding-left: 0.375em;
}

.prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}

.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 1.25em;
}

.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 1.25em;
}

.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 1.25em;
}

.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
	padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
	padding-right: 0;
}

.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
	padding-left: 0;
}

.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
	padding-right: 0;
}

.prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
	margin-top: 0;
}

.prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
	margin-bottom: 0;
}

.breadcrumb ol li a {
	display: inline-flex;
	align-items: center;
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}

.breadcrumb ol li a:hover {
	--tw-text-opacity: 1;
	color: rgb(17 24 39 / var(--tw-text-opacity));
}

.dark .breadcrumb ol li a {
	--tw-text-opacity: 1;
	color: rgb(156 163 175 / var(--tw-text-opacity));
}

.dark .breadcrumb ol li a:hover {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}

pre[class*="language-"] {
	--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

code[class*="language-"], pre[class*="language-"] {
	--tw-bg-opacity: 1;
	background-color: rgb(30 41 59 / var(--tw-bg-opacity));
}

.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

.fixed {
	position: fixed;
}

.absolute {
	position: absolute;
}

.relative {
	position: relative;
}

.inset-y-0 {
	top: 0px;
	bottom: 0px;
}

.top-0 {
	top: 0px;
}

.right-0 {
	right: 0px;
}

.left-0 {
	left: 0px;
}

.z-0 {
	z-index: 0;
}

.z-50 {
	z-index: 50;
}

.float-left {
	float: left;
}

.mx-auto {
	margin-left: auto;
	margin-right: auto;
}

.my-2 {
	margin-top: 0.5rem;
	margin-bottom: 0.5rem;
}

.my-4 {
	margin-top: 1rem;
	margin-bottom: 1rem;
}

.ml-3 {
	margin-left: 0.75rem;
}

.-ml-px {
	margin-left: -1px;
}

.mt-3 {
	margin-top: 0.75rem;
}

.mr-2 {
	margin-right: 0.5rem;
}

.ml-1 {
	margin-left: 0.25rem;
}

.mt-2 {
	margin-top: 0.5rem;
}

.ml-2 {
	margin-left: 0.5rem;
}

.mt-4 {
	margin-top: 1rem;
}

.ml-4 {
	margin-left: 1rem;
}

.mt-8 {
	margin-top: 2rem;
}

.ml-12 {
	margin-left: 3rem;
}

.-mt-px {
	margin-top: -1px;
}

.mb-4 {
	margin-bottom: 1rem;
}

.mb-8 {
	margin-bottom: 2rem;
}

.mt-auto {
	margin-top: auto;
}

.mt-1 {
	margin-top: 0.25rem;
}

.-mr-2 {
	margin-right: -0.5rem;
}

.mt-6 {
	margin-top: 1.5rem;
}

.block {
	display: block;
}

.flex {
	display: flex;
}

.inline-flex {
	display: inline-flex;
}

.grid {
	display: grid;
}

.contents {
	display: contents;
}

.hidden {
	display: none;
}

.h-5 {
	height: 1.25rem;
}

.h-4 {
	height: 1rem;
}

.h-8 {
	height: 2rem;
}

.h-16 {
	height: 4rem;
}

.h-20 {
	height: 5rem;
}

.h-6 {
	height: 1.5rem;
}

.h-10 {
	height: 2.5rem;
}

.h-96 {
	height: 24rem;
}

.h-64 {
	height: 16rem;
}

.min-h-screen {
	min-height: 100vh;
}

.w-5 {
	width: 1.25rem;
}

.w-4 {
	width: 1rem;
}

.w-8 {
	width: 2rem;
}

.w-auto {
	width: auto;
}

.w-20 {
	width: 5rem;
}

.w-48 {
	width: 12rem;
}

.w-6 {
	width: 1.5rem;
}

.w-full {
	width: 100%;
}

.max-w-screen-lg {
	max-width: 1024px;
}

.max-w-6xl {
	max-width: 72rem;
}

.max-w-xl {
	max-width: 36rem;
}

.max-w-2xl {
	max-width: 42rem;
}

.max-w-3xl {
	max-width: 48rem;
}

.max-w-none {
	max-width: none;
}

.max-w-7xl {
	max-width: 80rem;
}

.flex-1 {
	flex: 1 1 0%;
}

.flex-shrink-0 {
	flex-shrink: 0;
}

.origin-top-left {
	transform-origin: top left;
}

.origin-top {
	transform-origin: top;
}

.origin-top-right {
	transform-origin: top right;
}

.scale-95 {
	--tw-scale-x: .95;
	--tw-scale-y: .95;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-100 {
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-default {
	cursor: default;
}

.list-inside {
	list-style-position: inside;
}

.list-disc {
	list-style-type: disc;
}

.grid-cols-1 {
	grid-template-columns: repeat(1, minmax(0, 1fr));
}

.flex-row-reverse {
	flex-direction: row-reverse;
}

.flex-col {
	flex-direction: column;
}

.flex-col-reverse {
	flex-direction: column-reverse;
}

.items-center {
	align-items: center;
}

.justify-end {
	justify-content: flex-end;
}

.justify-center {
	justify-content: center;
}

.justify-between {
	justify-content: space-between;
}

.justify-items-center {
	justify-items: center;
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(0.25rem * var(--tw-space-x-reverse));
	margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-4 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(1rem * var(--tw-space-x-reverse));
	margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.space-y-12 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(3rem * var(--tw-space-y-reverse));
}

.space-x-8 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(2rem * var(--tw-space-x-reverse));
	margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}

.overflow-hidden {
	overflow: hidden;
}

.rounded-md {
	border-radius: 0.375rem;
}

.rounded {
	border-radius: 0.25rem;
}

.rounded-l-md {
	border-top-left-radius: 0.375rem;
	border-bottom-left-radius: 0.375rem;
}

.rounded-r-md {
	border-top-right-radius: 0.375rem;
	border-bottom-right-radius: 0.375rem;
}

.border {
	border-width: 1px;
}

.border-l-4 {
	border-left-width: 4px;
}

.border-t {
	border-top-width: 1px;
}

.border-r {
	border-right-width: 1px;
}

.border-b {
	border-bottom-width: 1px;
}

.border-b-2 {
	border-bottom-width: 2px;
}

.border-gray-300 {
	--tw-border-opacity: 1;
	border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.border-indigo-400 {
	--tw-border-opacity: 1;
	border-color: rgb(129 140 248 / var(--tw-border-opacity));
}

.border-transparent {
	border-color: transparent;
}

.border-gray-200 {
	--tw-border-opacity: 1;
	border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

.border-gray-400 {
	--tw-border-opacity: 1;
	border-color: rgb(156 163 175 / var(--tw-border-opacity));
}

.border-gray-100 {
	--tw-border-opacity: 1;
	border-color: rgb(243 244 246 / var(--tw-border-opacity));
}

.bg-white {
	--tw-bg-opacity: 1;
	background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-indigo-50 {
	--tw-bg-opacity: 1;
	background-color: rgb(238 242 255 / var(--tw-bg-opacity));
}

.bg-gray-100 {
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.bg-gray-800 {
	--tw-bg-opacity: 1;
	background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

.bg-gray-900 {
	--tw-bg-opacity: 1;
	background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.bg-gray-700 {
	--tw-bg-opacity: 1;
	background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

.bg-slate-700 {
	--tw-bg-opacity: 1;
	background-color: rgb(51 65 85 / var(--tw-bg-opacity));
}

.bg-gray-300 {
	--tw-bg-opacity: 1;
	background-color: rgb(209 213 219 / var(--tw-bg-opacity));
}

.bg-gray-200 {
	--tw-bg-opacity: 1;
	background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.from-slate-800 {
	--tw-gradient-from: #1e293b;
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgb(30 41 59 / 0));
}

.to-slate-900 {
	--tw-gradient-to: #0f172a;
}

.fill-current {
	fill: currentColor;
}

.p-6 {
	padding: 1.5rem;
}

.p-2 {
	padding: 0.5rem;
}

.p-4 {
	padding: 1rem;
}

.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}

.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}

.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}

.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}

.px-6 {
	padding-left: 1.5rem;
	padding-right: 1.5rem;
}

.py-1 {
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
}

.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}

.py-16 {
	padding-top: 4rem;
	padding-bottom: 4rem;
}

.py-12 {
	padding-top: 3rem;
	padding-bottom: 3rem;
}

.py-6 {
	padding-top: 1.5rem;
	padding-bottom: 1.5rem;
}

.px-1 {
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}

.pl-3 {
	padding-left: 0.75rem;
}

.pr-4 {
	padding-right: 1rem;
}

.pt-8 {
	padding-top: 2rem;
}

.pr-2 {
	padding-right: 0.5rem;
}

.pt-2 {
	padding-top: 0.5rem;
}

.pb-3 {
	padding-bottom: 0.75rem;
}

.pl-4 {
	padding-left: 1rem;
}

.pt-4 {
	padding-top: 1rem;
}

.pb-1 {
	padding-bottom: 0.25rem;
}

.pt-6 {
	padding-top: 1.5rem;
}

.pl-1 {
	padding-left: 0.25rem;
}

.pt-1 {
	padding-top: 0.25rem;
}

.text-center {
	text-align: center;
}

.font-sans {
	font-family: Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}

.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}

.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}

.text-2xl {
	font-size: 1.5rem;
	line-height: 2rem;
}

.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}

.font-medium {
	font-weight: 500;
}

.font-semibold {
	font-weight: 600;
}

.font-bold {
	font-weight: 700;
}

.uppercase {
	text-transform: uppercase;
}

.leading-5 {
	line-height: 1.25rem;
}

.leading-7 {
	line-height: 1.75rem;
}

.leading-tight {
	line-height: 1.25;
}

.tracking-widest {
	letter-spacing: 0.1em;
}

.tracking-wider {
	letter-spacing: 0.05em;
}

.tracking-tighter {
	letter-spacing: -0.05em;
}

.tracking-tight {
	letter-spacing: -0.025em;
}

.text-gray-500 {
	--tw-text-opacity: 1;
	color: rgb(107 114 128 / var(--tw-text-opacity));
}

.text-gray-700 {
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}

.text-red-600 {
	--tw-text-opacity: 1;
	color: rgb(220 38 38 / var(--tw-text-opacity));
}

.text-gray-400 {
	--tw-text-opacity: 1;
	color: rgb(156 163 175 / var(--tw-text-opacity));
}

.text-indigo-700 {
	--tw-text-opacity: 1;
	color: rgb(67 56 202 / var(--tw-text-opacity));
}

.text-gray-600 {
	--tw-text-opacity: 1;
	color: rgb(75 85 99 / var(--tw-text-opacity));
}

.text-gray-200 {
	--tw-text-opacity: 1;
	color: rgb(229 231 235 / var(--tw-text-opacity));
}

.text-gray-300 {
	--tw-text-opacity: 1;
	color: rgb(209 213 219 / var(--tw-text-opacity));
}

.text-gray-900 {
	--tw-text-opacity: 1;
	color: rgb(17 24 39 / var(--tw-text-opacity));
}

.text-white {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-green-600 {
	--tw-text-opacity: 1;
	color: rgb(22 163 74 / var(--tw-text-opacity));
}

.text-gray-800 {
	--tw-text-opacity: 1;
	color: rgb(31 41 55 / var(--tw-text-opacity));
}

.text-indigo-600 {
	--tw-text-opacity: 1;
	color: rgb(79 70 229 / var(--tw-text-opacity));
}

.underline {
	-webkit-text-decoration-line: underline;
	        text-decoration-line: underline;
}

.antialiased {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.opacity-0 {
	opacity: 0;
}

.opacity-100 {
	opacity: 1;
}

.shadow-sm {
	--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow {
	--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
	--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.ring-1 {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-gray-300 {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgb(209 213 219 / var(--tw-ring-opacity));
}

.ring-black {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgb(0 0 0 / var(--tw-ring-opacity));
}

.ring-opacity-5 {
	--tw-ring-opacity: 0.05;
}

.transition {
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

.duration-150 {
	transition-duration: 150ms;
}

.duration-200 {
	transition-duration: 200ms;
}

.duration-75 {
	transition-duration: 75ms;
}

.ease-in-out {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-out {
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.ease-in {
	transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.hover\:border-gray-300:hover {
	--tw-border-opacity: 1;
	border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.hover\:bg-gray-50:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.hover\:bg-gray-700:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

.hover\:bg-gray-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.hover\:bg-slate-800:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(30 41 59 / var(--tw-bg-opacity));
}

.hover\:text-gray-500:hover {
	--tw-text-opacity: 1;
	color: rgb(107 114 128 / var(--tw-text-opacity));
}

.hover\:text-gray-400:hover {
	--tw-text-opacity: 1;
	color: rgb(156 163 175 / var(--tw-text-opacity));
}

.hover\:text-gray-800:hover {
	--tw-text-opacity: 1;
	color: rgb(31 41 55 / var(--tw-text-opacity));
}

.hover\:text-gray-900:hover {
	--tw-text-opacity: 1;
	color: rgb(17 24 39 / var(--tw-text-opacity));
}

.hover\:text-white:hover {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}

.hover\:text-gray-700:hover {
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}

.focus\:z-10:focus {
	z-index: 10;
}

.focus\:border-blue-300:focus {
	--tw-border-opacity: 1;
	border-color: rgb(147 197 253 / var(--tw-border-opacity));
}

.focus\:border-indigo-300:focus {
	--tw-border-opacity: 1;
	border-color: rgb(165 180 252 / var(--tw-border-opacity));
}

.focus\:border-indigo-700:focus {
	--tw-border-opacity: 1;
	border-color: rgb(67 56 202 / var(--tw-border-opacity));
}

.focus\:border-gray-300:focus {
	--tw-border-opacity: 1;
	border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.focus\:border-gray-900:focus {
	--tw-border-opacity: 1;
	border-color: rgb(17 24 39 / var(--tw-border-opacity));
}

.focus\:bg-indigo-100:focus {
	--tw-bg-opacity: 1;
	background-color: rgb(224 231 255 / var(--tw-bg-opacity));
}

.focus\:bg-gray-50:focus {
	--tw-bg-opacity: 1;
	background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.focus\:bg-gray-100:focus {
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.focus\:text-indigo-800:focus {
	--tw-text-opacity: 1;
	color: rgb(55 48 163 / var(--tw-text-opacity));
}

.focus\:text-gray-800:focus {
	--tw-text-opacity: 1;
	color: rgb(31 41 55 / var(--tw-text-opacity));
}

.focus\:text-gray-700:focus {
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}

.focus\:text-gray-500:focus {
	--tw-text-opacity: 1;
	color: rgb(107 114 128 / var(--tw-text-opacity));
}

.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.focus\:ring:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-2:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-inset:focus {
	--tw-ring-inset: inset;
}

.focus\:ring-indigo-200:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgb(199 210 254 / var(--tw-ring-opacity));
}

.focus\:ring-white:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.focus\:ring-opacity-50:focus {
	--tw-ring-opacity: 0.5;
}

.active\:bg-gray-100:active {
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.active\:bg-gray-900:active {
	--tw-bg-opacity: 1;
	background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.active\:text-gray-700:active {
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}

.active\:text-gray-500:active {
	--tw-text-opacity: 1;
	color: rgb(107 114 128 / var(--tw-text-opacity));
}

.disabled\:opacity-25:disabled {
	opacity: 0.25;
}

.prose-h1\:tracking-tighter :is(:where(h1):not(:where([class~="not-prose"] *))) {
	letter-spacing: -0.05em;
}

.prose-h1\:tracking-tight :is(:where(h1):not(:where([class~="not-prose"] *))) {
	letter-spacing: -0.025em;
}

.prose-h2\:font-extrabold :is(:where(h2):not(:where([class~="not-prose"] *))) {
	font-weight: 800;
}

.prose-h2\:tracking-tighter :is(:where(h2):not(:where([class~="not-prose"] *))) {
	letter-spacing: -0.05em;
}

.prose-h3\:font-extrabold :is(:where(h3):not(:where([class~="not-prose"] *))) {
	font-weight: 800;
}

.prose-h3\:tracking-tighter :is(:where(h3):not(:where([class~="not-prose"] *))) {
	letter-spacing: -0.05em;
}

.prose-h4\:tracking-tighter :is(:where(h4):not(:where([class~="not-prose"] *))) {
	letter-spacing: -0.05em;
}

.prose-pre\:bg-zinc-900 :is(:where(pre):not(:where([class~="not-prose"] *))) {
	--tw-bg-opacity: 1;
	background-color: rgb(24 24 27 / var(--tw-bg-opacity));
}

.dark .dark\:prose-invert {
	--tw-prose-body: var(--tw-prose-invert-body);
	--tw-prose-headings: var(--tw-prose-invert-headings);
	--tw-prose-lead: var(--tw-prose-invert-lead);
	--tw-prose-links: var(--tw-prose-invert-links);
	--tw-prose-bold: var(--tw-prose-invert-bold);
	--tw-prose-counters: var(--tw-prose-invert-counters);
	--tw-prose-bullets: var(--tw-prose-invert-bullets);
	--tw-prose-hr: var(--tw-prose-invert-hr);
	--tw-prose-quotes: var(--tw-prose-invert-quotes);
	--tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
	--tw-prose-captions: var(--tw-prose-invert-captions);
	--tw-prose-code: var(--tw-prose-invert-code);
	--tw-prose-pre-code: var(--tw-prose-invert-pre-code);
	--tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
	--tw-prose-th-borders: var(--tw-prose-invert-th-borders);
	--tw-prose-td-borders: var(--tw-prose-invert-td-borders);
}

.dark .dark\:border-gray-700 {
	--tw-border-opacity: 1;
	border-color: rgb(55 65 81 / var(--tw-border-opacity));
}

.dark .dark\:bg-gray-900 {
	--tw-bg-opacity: 1;
	background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

.dark .dark\:bg-gray-800 {
	--tw-bg-opacity: 1;
	background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

.dark .dark\:bg-slate-700 {
	--tw-bg-opacity: 1;
	background-color: rgb(51 65 85 / var(--tw-bg-opacity));
}

.dark .dark\:bg-slate-800 {
	--tw-bg-opacity: 1;
	background-color: rgb(30 41 59 / var(--tw-bg-opacity));
}

.dark .dark\:bg-slate-900 {
	--tw-bg-opacity: 1;
	background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

.dark .dark\:bg-slate-400 {
	--tw-bg-opacity: 1;
	background-color: rgb(148 163 184 / var(--tw-bg-opacity));
}

.dark .dark\:bg-gradient-to-b {
	background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.dark .dark\:text-gray-500 {
	--tw-text-opacity: 1;
	color: rgb(107 114 128 / var(--tw-text-opacity));
}

.dark .dark\:text-white {
	--tw-text-opacity: 1;
	color: rgb(255 255 255 / var(--tw-text-opacity));
}

.dark .dark\:text-gray-400 {
	--tw-text-opacity: 1;
	color: rgb(156 163 175 / var(--tw-text-opacity));
}

.dark .dark\:text-orange-300 {
	--tw-text-opacity: 1;
	color: rgb(253 186 116 / var(--tw-text-opacity));
}

.dark .dark\:text-gray-300 {
	--tw-text-opacity: 1;
	color: rgb(209 213 219 / var(--tw-text-opacity));
}

.dark .dark\:hover\:bg-slate-800:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(30 41 59 / var(--tw-bg-opacity));
}

.dark .dark\:hover\:bg-slate-900:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

.dark .dark\:hover\:text-orange-300:hover {
	--tw-text-opacity: 1;
	color: rgb(253 186 116 / var(--tw-text-opacity));
}

.dark .dark\:hover\:text-red-500:hover {
	--tw-text-opacity: 1;
	color: rgb(239 68 68 / var(--tw-text-opacity));
}

.dark .dark\:prose-p\:text-gray-400 :is(:where(p):not(:where([class~="not-prose"] *))) {
	--tw-text-opacity: 1;
	color: rgb(156 163 175 / var(--tw-text-opacity));
}

.dark .dark\:prose-a\:text-red-500 :is(:where(a):not(:where([class~="not-prose"] *))) {
	--tw-text-opacity: 1;
	color: rgb(239 68 68 / var(--tw-text-opacity));
}

.dark .dark\:prose-a\:text-orange-300 :is(:where(a):not(:where([class~="not-prose"] *))) {
	--tw-text-opacity: 1;
	color: rgb(253 186 116 / var(--tw-text-opacity));
}

@media (min-width: 640px) {

	.sm\:static {
		position: static;
	}

	.sm\:inset-auto {
		top: auto;
		right: auto;
		bottom: auto;
		left: auto;
	}

	.sm\:my-8 {
		margin-top: 2rem;
		margin-bottom: 2rem;
	}

	.sm\:my-0 {
		margin-top: 0px;
		margin-bottom: 0px;
	}

	.sm\:my-12 {
		margin-top: 3rem;
		margin-bottom: 3rem;
	}

	.sm\:my-6 {
		margin-top: 1.5rem;
		margin-bottom: 1.5rem;
	}

	.sm\:-my-px {
		margin-top: -1px;
		margin-bottom: -1px;
	}

	.sm\:ml-0 {
		margin-left: 0px;
	}

	.sm\:ml-6 {
		margin-left: 1.5rem;
	}

	.sm\:mr-8 {
		margin-right: 2rem;
	}

	.sm\:ml-10 {
		margin-left: 2.5rem;
	}

	.sm\:block {
		display: block;
	}

	.sm\:flex {
		display: flex;
	}

	.sm\:hidden {
		display: none;
	}

	.sm\:h-20 {
		height: 5rem;
	}

	.sm\:max-w-md {
		max-width: 28rem;
	}

	.sm\:flex-1 {
		flex: 1 1 0%;
	}

	.sm\:flex-col-reverse {
		flex-direction: column-reverse;
	}

	.sm\:items-center {
		align-items: center;
	}

	.sm\:items-stretch {
		align-items: stretch;
	}

	.sm\:justify-start {
		justify-content: flex-start;
	}

	.sm\:justify-center {
		justify-content: center;
	}

	.sm\:justify-between {
		justify-content: space-between;
	}

	.sm\:rounded-lg {
		border-radius: 0.5rem;
	}

	.sm\:px-6 {
		padding-left: 1.5rem;
		padding-right: 1.5rem;
	}

	.sm\:pt-0 {
		padding-top: 0px;
	}

	.sm\:pr-0 {
		padding-right: 0px;
	}

	.sm\:text-left {
		text-align: left;
	}

	.sm\:text-right {
		text-align: right;
	}
}

@media (min-width: 768px) {

	.md\:prose-lg {
		font-size: 1.125rem;
		line-height: 1.7777778;
	}

	.md\:prose-lg :where(p):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
		margin-bottom: 1.3333333em;
	}

	.md\:prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
		font-size: 1.2222222em;
		line-height: 1.4545455;
		margin-top: 1.0909091em;
		margin-bottom: 1.0909091em;
	}

	.md\:prose-lg :where(blockquote):not(:where([class~="not-prose"] *)) {
		margin-top: 1.6666667em;
		margin-bottom: 1.6666667em;
		padding-left: 1em;
	}

	.md\:prose-lg :where(h1):not(:where([class~="not-prose"] *)) {
		font-size: 2.6666667em;
		margin-top: 0;
		margin-bottom: 0.8333333em;
		line-height: 1;
	}

	.md\:prose-lg :where(h2):not(:where([class~="not-prose"] *)) {
		font-size: 1.6666667em;
		margin-top: 1.8666667em;
		margin-bottom: 1.0666667em;
		line-height: 1.3333333;
	}

	.md\:prose-lg :where(h3):not(:where([class~="not-prose"] *)) {
		font-size: 1.3333333em;
		margin-top: 1.6666667em;
		margin-bottom: 0.6666667em;
		line-height: 1.5;
	}

	.md\:prose-lg :where(h4):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 0.4444444em;
		line-height: 1.5555556;
	}

	.md\:prose-lg :where(img):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.md\:prose-lg :where(video):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.md\:prose-lg :where(figure):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.md\:prose-lg :where(figure > *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}

	.md\:prose-lg :where(figcaption):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
		margin-top: 1em;
	}

	.md\:prose-lg :where(code):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
	}

	.md\:prose-lg :where(h2 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.8666667em;
	}

	.md\:prose-lg :where(h3 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.875em;
	}

	.md\:prose-lg :where(pre):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.75;
		margin-top: 2em;
		margin-bottom: 2em;
		border-radius: 0.375rem;
		padding-top: 1em;
		padding-right: 1.5em;
		padding-bottom: 1em;
		padding-left: 1.5em;
	}

	.md\:prose-lg :where(ol):not(:where([class~="not-prose"] *)) {
		padding-left: 1.5555556em;
	}

	.md\:prose-lg :where(ul):not(:where([class~="not-prose"] *)) {
		padding-left: 1.5555556em;
	}

	.md\:prose-lg :where(li):not(:where([class~="not-prose"] *)) {
		margin-top: 0.6666667em;
		margin-bottom: 0.6666667em;
	}

	.md\:prose-lg :where(ol > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4444444em;
	}

	.md\:prose-lg :where(ul > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4444444em;
	}

	.md\:prose-lg > :where(ul > li p):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}

	.md\:prose-lg > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
	}

	.md\:prose-lg > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.3333333em;
	}

	.md\:prose-lg > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
	}

	.md\:prose-lg > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.3333333em;
	}

	.md\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}

	.md\:prose-lg :where(hr):not(:where([class~="not-prose"] *)) {
		margin-top: 3.1111111em;
		margin-bottom: 3.1111111em;
	}

	.md\:prose-lg :where(hr + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.md\:prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.md\:prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.md\:prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.md\:prose-lg :where(table):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
	}

	.md\:prose-lg :where(thead th):not(:where([class~="not-prose"] *)) {
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}

	.md\:prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}

	.md\:prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}

	.md\:prose-lg :where(tbody td):not(:where([class~="not-prose"] *)) {
		padding-top: 0.75em;
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}

	.md\:prose-lg :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}

	.md\:prose-lg :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}

	.md\:prose-lg > :where(:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.md\:prose-lg > :where(:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 0;
	}

	.md\:float-none {
		float: none;
	}

	.md\:hidden {
		display: none;
	}

	.md\:grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.md\:flex-row {
		flex-direction: row;
	}

	.md\:space-x-3 > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-right: calc(0.75rem * var(--tw-space-x-reverse));
		margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
	}

	.md\:border-t-0 {
		border-top-width: 0px;
	}

	.md\:border-l {
		border-left-width: 1px;
	}

	.md\:p-1 {
		padding: 0.25rem;
	}

	.md\:px-4 {
		padding-left: 1rem;
		padding-right: 1rem;
	}

	.md\:text-base {
		font-size: 1rem;
		line-height: 1.5rem;
	}

	.md\:text-xl {
		font-size: 1.25rem;
		line-height: 1.75rem;
	}

	.md\:text-lg {
		font-size: 1.125rem;
		line-height: 1.75rem;
	}
}

@media (min-width: 1024px) {

	.lg\:prose-lg {
		font-size: 1.125rem;
		line-height: 1.7777778;
	}

	.lg\:prose-lg :where(p):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
		margin-bottom: 1.3333333em;
	}

	.lg\:prose-lg :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
		font-size: 1.2222222em;
		line-height: 1.4545455;
		margin-top: 1.0909091em;
		margin-bottom: 1.0909091em;
	}

	.lg\:prose-lg :where(blockquote):not(:where([class~="not-prose"] *)) {
		margin-top: 1.6666667em;
		margin-bottom: 1.6666667em;
		padding-left: 1em;
	}

	.lg\:prose-lg :where(h1):not(:where([class~="not-prose"] *)) {
		font-size: 2.6666667em;
		margin-top: 0;
		margin-bottom: 0.8333333em;
		line-height: 1;
	}

	.lg\:prose-lg :where(h2):not(:where([class~="not-prose"] *)) {
		font-size: 1.6666667em;
		margin-top: 1.8666667em;
		margin-bottom: 1.0666667em;
		line-height: 1.3333333;
	}

	.lg\:prose-lg :where(h3):not(:where([class~="not-prose"] *)) {
		font-size: 1.3333333em;
		margin-top: 1.6666667em;
		margin-bottom: 0.6666667em;
		line-height: 1.5;
	}

	.lg\:prose-lg :where(h4):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 0.4444444em;
		line-height: 1.5555556;
	}

	.lg\:prose-lg :where(img):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.lg\:prose-lg :where(video):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.lg\:prose-lg :where(figure):not(:where([class~="not-prose"] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.lg\:prose-lg :where(figure > *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}

	.lg\:prose-lg :where(figcaption):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
		margin-top: 1em;
	}

	.lg\:prose-lg :where(code):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
	}

	.lg\:prose-lg :where(h2 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.8666667em;
	}

	.lg\:prose-lg :where(h3 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.875em;
	}

	.lg\:prose-lg :where(pre):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.75;
		margin-top: 2em;
		margin-bottom: 2em;
		border-radius: 0.375rem;
		padding-top: 1em;
		padding-right: 1.5em;
		padding-bottom: 1em;
		padding-left: 1.5em;
	}

	.lg\:prose-lg :where(ol):not(:where([class~="not-prose"] *)) {
		padding-left: 1.5555556em;
	}

	.lg\:prose-lg :where(ul):not(:where([class~="not-prose"] *)) {
		padding-left: 1.5555556em;
	}

	.lg\:prose-lg :where(li):not(:where([class~="not-prose"] *)) {
		margin-top: 0.6666667em;
		margin-bottom: 0.6666667em;
	}

	.lg\:prose-lg :where(ol > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4444444em;
	}

	.lg\:prose-lg :where(ul > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4444444em;
	}

	.lg\:prose-lg > :where(ul > li p):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}

	.lg\:prose-lg > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
	}

	.lg\:prose-lg > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.3333333em;
	}

	.lg\:prose-lg > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.3333333em;
	}

	.lg\:prose-lg > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.3333333em;
	}

	.lg\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}

	.lg\:prose-lg :where(hr):not(:where([class~="not-prose"] *)) {
		margin-top: 3.1111111em;
		margin-bottom: 3.1111111em;
	}

	.lg\:prose-lg :where(hr + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-lg :where(h2 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-lg :where(h3 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-lg :where(h4 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-lg :where(table):not(:where([class~="not-prose"] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
	}

	.lg\:prose-lg :where(thead th):not(:where([class~="not-prose"] *)) {
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}

	.lg\:prose-lg :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}

	.lg\:prose-lg :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}

	.lg\:prose-lg :where(tbody td):not(:where([class~="not-prose"] *)) {
		padding-top: 0.75em;
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}

	.lg\:prose-lg :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}

	.lg\:prose-lg :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}

	.lg\:prose-lg > :where(:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-lg > :where(:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 0;
	}

	.lg\:prose-xl {
		font-size: 1.25rem;
		line-height: 1.8;
	}

	.lg\:prose-xl :where(p):not(:where([class~="not-prose"] *)) {
		margin-top: 1.2em;
		margin-bottom: 1.2em;
	}

	.lg\:prose-xl :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
		font-size: 1.2em;
		line-height: 1.5;
		margin-top: 1em;
		margin-bottom: 1em;
	}

	.lg\:prose-xl :where(blockquote):not(:where([class~="not-prose"] *)) {
		margin-top: 1.6em;
		margin-bottom: 1.6em;
		padding-left: 1.0666667em;
	}

	.lg\:prose-xl :where(h1):not(:where([class~="not-prose"] *)) {
		font-size: 2.8em;
		margin-top: 0;
		margin-bottom: 0.8571429em;
		line-height: 1;
	}

	.lg\:prose-xl :where(h2):not(:where([class~="not-prose"] *)) {
		font-size: 1.8em;
		margin-top: 1.5555556em;
		margin-bottom: 0.8888889em;
		line-height: 1.1111111;
	}

	.lg\:prose-xl :where(h3):not(:where([class~="not-prose"] *)) {
		font-size: 1.5em;
		margin-top: 1.6em;
		margin-bottom: 0.6666667em;
		line-height: 1.3333333;
	}

	.lg\:prose-xl :where(h4):not(:where([class~="not-prose"] *)) {
		margin-top: 1.8em;
		margin-bottom: 0.6em;
		line-height: 1.6;
	}

	.lg\:prose-xl :where(img):not(:where([class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.lg\:prose-xl :where(video):not(:where([class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.lg\:prose-xl :where(figure):not(:where([class~="not-prose"] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.lg\:prose-xl :where(figure > *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}

	.lg\:prose-xl :where(figcaption):not(:where([class~="not-prose"] *)) {
		font-size: 0.9em;
		line-height: 1.5555556;
		margin-top: 1em;
	}

	.lg\:prose-xl :where(code):not(:where([class~="not-prose"] *)) {
		font-size: 0.9em;
	}

	.lg\:prose-xl :where(h2 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.8611111em;
	}

	.lg\:prose-xl :where(h3 code):not(:where([class~="not-prose"] *)) {
		font-size: 0.9em;
	}

	.lg\:prose-xl :where(pre):not(:where([class~="not-prose"] *)) {
		font-size: 0.9em;
		line-height: 1.7777778;
		margin-top: 2em;
		margin-bottom: 2em;
		border-radius: 0.5rem;
		padding-top: 1.1111111em;
		padding-right: 1.3333333em;
		padding-bottom: 1.1111111em;
		padding-left: 1.3333333em;
	}

	.lg\:prose-xl :where(ol):not(:where([class~="not-prose"] *)) {
		padding-left: 1.6em;
	}

	.lg\:prose-xl :where(ul):not(:where([class~="not-prose"] *)) {
		padding-left: 1.6em;
	}

	.lg\:prose-xl :where(li):not(:where([class~="not-prose"] *)) {
		margin-top: 0.6em;
		margin-bottom: 0.6em;
	}

	.lg\:prose-xl :where(ol > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4em;
	}

	.lg\:prose-xl :where(ul > li):not(:where([class~="not-prose"] *)) {
		padding-left: 0.4em;
	}

	.lg\:prose-xl > :where(ul > li p):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8em;
		margin-bottom: 0.8em;
	}

	.lg\:prose-xl > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.2em;
	}

	.lg\:prose-xl > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.2em;
	}

	.lg\:prose-xl > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 1.2em;
	}

	.lg\:prose-xl > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 1.2em;
	}

	.lg\:prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
		margin-top: 0.8em;
		margin-bottom: 0.8em;
	}

	.lg\:prose-xl :where(hr):not(:where([class~="not-prose"] *)) {
		margin-top: 2.8em;
		margin-bottom: 2.8em;
	}

	.lg\:prose-xl :where(hr + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-xl :where(h2 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-xl :where(h3 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-xl :where(h4 + *):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-xl :where(table):not(:where([class~="not-prose"] *)) {
		font-size: 0.9em;
		line-height: 1.5555556;
	}

	.lg\:prose-xl :where(thead th):not(:where([class~="not-prose"] *)) {
		padding-right: 0.6666667em;
		padding-bottom: 0.8888889em;
		padding-left: 0.6666667em;
	}

	.lg\:prose-xl :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}

	.lg\:prose-xl :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}

	.lg\:prose-xl :where(tbody td):not(:where([class~="not-prose"] *)) {
		padding-top: 0.8888889em;
		padding-right: 0.6666667em;
		padding-bottom: 0.8888889em;
		padding-left: 0.6666667em;
	}

	.lg\:prose-xl :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
		padding-left: 0;
	}

	.lg\:prose-xl :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
		padding-right: 0;
	}

	.lg\:prose-xl > :where(:first-child):not(:where([class~="not-prose"] *)) {
		margin-top: 0;
	}

	.lg\:prose-xl > :where(:last-child):not(:where([class~="not-prose"] *)) {
		margin-bottom: 0;
	}

	.lg\:absolute {
		position: absolute;
	}

	.lg\:top-0 {
		top: 0px;
	}

	.lg\:right-full {
		right: 100%;
	}

	.lg\:my-12 {
		margin-top: 3rem;
		margin-bottom: 3rem;
	}

	.lg\:my-16 {
		margin-top: 4rem;
		margin-bottom: 4rem;
	}

	.lg\:my-8 {
		margin-top: 2rem;
		margin-bottom: 2rem;
	}

	.lg\:ml-auto {
		margin-left: auto;
	}

	.lg\:block {
		display: block;
	}

	.lg\:hidden {
		display: none;
	}

	.lg\:w-\[50rem\] {
		width: 50rem;
	}

	.lg\:max-w-none {
		max-width: none;
	}

	.lg\:whitespace-nowrap {
		white-space: nowrap;
	}

	.lg\:px-8 {
		padding-left: 2rem;
		padding-right: 2rem;
	}

	.lg\:text-2xl {
		font-size: 1.5rem;
		line-height: 2rem;
	}

	.lg\:text-lg {
		font-size: 1.125rem;
		line-height: 1.75rem;
	}
}
